name: Ammend Release with Binaries (DEB, Windows, MacOS)

on:
    release:
        types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            ext: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: zip

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      
      - name: Add apple build target
        if: matrix.os == 'macos-latest'
        run: rustup target add aarch64-apple-darwin

      - name: Build
        run: cargo build --release

      - name: Package binary
        run: |
          mkdir dist
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp target/${{ matrix.target }}/release/thanix.exe dist/
            cd dist && zip ../thanix-${{ matrix.target }}.${{ matrix.ext }} thanix.exe
          else
            cp target/${{ matrix.target }}/release/thanix dist/
            cd dist && tar czf ../thanix-${{ matrix.target }}.${{ matrix.ext }} thanix
          fi

      # New step: build a .deb package on Ubuntu
      - name: Build Debian package
        if: matrix.os == 'ubuntu-latest'
        run: |
          cargo install cargo-deb --force
          cargo deb --output ../thanix-${{ matrix.target }}.deb

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            thanix-${{ matrix.target }}.${{ matrix.ext }}
            thanix-${{ matrix.target }}.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
